name: Claude Assistant
permissions:
  contents: write
  pull-requests: read
  issues: write
  id-token: write
on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]
jobs:
  claude-response:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'issues' && contains(github.event.issue.body, '@claude'))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1
      - uses: anthropics/claude-code-action@beta
        with:
          use_bedrock: "true"
          model: ${{ secrets.AWS_CLAUDE_PROFILE }}
          custom_instructions: |
            When you are asked to write, update, or fix code, please ensure that:
            - You always try to run git bash commands to commit your changes.
            You have limited permissions and most bash commands will be rejected
            but you specifically have been granted permission to run common git
            commands like `git add`, `git commit`, and `git push`. Even if another
            bash command fails, you should still try to run these git commands.
            - Before ending a job, if you have code changes, make every reasonable attempt
            to ensure you commit and push your changes to the respective branch.
            - Never commit changes to the 'develop' or 'main' branches, always commit to
            the applicable branch based on your current context.
            - You do not have access to the development environment, so framework or
            package-specific commands like `pnpm install` or `python manage.py makemigrations`
            will not work. Instead, focus on code changes and commit them.
